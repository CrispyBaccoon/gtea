#!/usr/bin/env sh

msg() {
    printf "\033[32;1m%s\033[m %s\n" "$PROMPT" "$*"
}

warn() {
    >&2 printf "\033[33;1m%s \033[mwarning: %s\n" "$PROMPT" "$*"
}

die() {
    >&2 printf "\033[31;1m%s \033[merror: %s\n" "$PROMPT" "$*"
    exit 1
}

confirm() {
    >&2 printf "\033[33;1m%s \033[mconfirm? %s" "$PROMPT" "$CONFIRM_PROMPT"
    read -r ans
    if [ "$ans" != y ] ; then
        >&2 printf '%s\n' 'Exiting.'
        exit
    fi
}

chd() {
  [[ -z "$dir" ]] && die "no directory specified."
  cd $dir && exec $SHELL
}

usage() {
>&2 cat <<"EOF"
        [i]  -  init
    [clone]  -  clone
   [create]  -  create [repo]
   [commit]  -  commit <type> <scope> <message>
       [wt]  -  worktree [name]
     [push]  -  push [branch]
        [s]  -  sync
       [cl]  -  changelog [N of commits|--since HASH]
       [ch]  -  cherry-pick
     [hash]  -  show hash [ref|-b <branch>]
EOF
exit 1
}

main() {
  [ "$1" ] || usage

  flag=${1#-}
  shift

  case $flag in
        i) __init $@ ;;
        clone) __clone $@ ;;
        create) __create $@ ;;
        commit) __commit "$@" ;;
        wt) __worktree $@ ;;
        push) __push $@ ;;
        s) __sync $@ ;;
        cl) __changelog $@ ;;
        ch) __cherry $@ ;;
        hash) __hash $@ ;;
        *) die "command does not exist" ;;
  esac
}
